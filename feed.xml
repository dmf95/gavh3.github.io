<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://gavh3.github.io/</id><title>Gavin He</title><subtitle>A minimal, portfolio, sidebar, bootstrap Jekyll theme with responsive web design and focuses on text presentation.</subtitle> <updated>2021-09-18T09:54:56-07:00</updated> <author> <name>Gavin He</name> <uri>https://gavh3.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://gavh3.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://gavh3.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator> <rights> © 2021 Gavin He </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Demystifying the Python arrow notation.</title><link href="https://gavh3.github.io/posts/demystifying-the-python-arrow-notation/" rel="alternate" type="text/html" title="Demystifying the Python arrow notation." /><published>2021-09-18T00:00:00-07:00</published> <updated>2021-09-18T09:54:28-07:00</updated> <id>https://gavh3.github.io/posts/demystifying-the-python-arrow-notation/</id> <content src="https://gavh3.github.io/posts/demystifying-the-python-arrow-notation/" /> <author> <name>Gavin He</name> </author> <category term="Python" /> <summary> Occasionally I stumble upon something unusual but benign such that it warrants no more reaction than what’s elicited through scrolling r/hmmm. Let me introduce the Python function annotation. Annotations are descriptions or “meta-data” in code to tell the reader what’s going on. Conventionally, in-line comments do that job pretty well. For instance, this is how I would typically annotate a fun... </summary> </entry> <entry><title>Why you need a conda environment, like now.</title><link href="https://gavh3.github.io/posts/why-you-need-conda-envs/" rel="alternate" type="text/html" title="Why you need a conda environment, like now." /><published>2021-09-13T18:25:00-07:00</published> <updated>2021-09-18T09:48:14-07:00</updated> <id>https://gavh3.github.io/posts/why-you-need-conda-envs/</id> <content src="https://gavh3.github.io/posts/why-you-need-conda-envs/" /> <author> <name>Gavin He</name> </author> <category term="Python" /> <summary> Before I start, I want to say that this is not a comprehensive guide to Python virtual environments. There are very good resources online already discerning between conda, pip, and virtualenv (see: The Definitive Guide to Conda Environments) Let me start off with a story of how I wasted an entire afternoon after corrupting my conda environment. How I ended up here Recently, a Python package -... </summary> </entry> <entry><title>I've updated .gitignore but the files are still tracked, what's the deal?</title><link href="https://gavh3.github.io/posts/refresh-gitignore-cache/" rel="alternate" type="text/html" title="I've updated .gitignore but the files are still tracked, what's the deal?" /><published>2021-09-11T16:02:00-07:00</published> <updated>2021-09-13T22:42:59-07:00</updated> <id>https://gavh3.github.io/posts/refresh-gitignore-cache/</id> <content src="https://gavh3.github.io/posts/refresh-gitignore-cache/" /> <author> <name>Gavin He</name> </author> <category term="Git" /> <summary> So you’ve changed your project’s .gitignore after accidentally uploading the config file containing the password you use for everything that isn’t your online banking account. You hurriedly create a new git commit -m "changes" and push. Huh? The secrets are still there! Well, let me save you some grief! You need to delete your tracked files cache. Heres how: Run git rm -r --cached . to del... </summary> </entry> </feed>
